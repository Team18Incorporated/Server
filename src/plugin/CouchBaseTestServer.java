package plugin;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;

import Model.Game;
import Model.GameInfo;
import Model.User;

import com.couchbase.lite.*;

public class CouchBaseTestServer {

	public static void main(String[] args) {

		Logger log = Logger.getLogger("app");
		log.setLevel(Level.ALL);
		JavaContext context = new JavaContext();

		// Create a manager
		Manager manager = null;
		try {
			manager = new Manager(context, Manager.DEFAULT_OPTIONS);
		} catch (IOException e) {
			e.printStackTrace();
		}

		// Create or open the database named app
		Database database = null;
		try {
			database = manager.getDatabase("app");
		} catch (CouchbaseLiteException e) {
			e.printStackTrace();
		}

		// The properties that will be saved on the document
		Map<String, Object> properties = new HashMap<String, Object>();
		properties.put("title", "Couchbase Mobile");
		properties.put("sdk", "Java");

		// Create a new document
		Document document = database.getDocument("title stuff");

		// Save the document to the database
		try {
			document.putProperties(properties);
		} catch (CouchbaseLiteException e) {
			e.printStackTrace();
		}

		// Log the document ID (generated by the database)
		// and properties
		log.info(String.format("Document ID :: %s", document.getId()));
		/*log.info(String.format("Learning %s with %s",
				(String) document.getProperty("title"),
				(String) document.getProperty("sdk")));*/

		HashMap<String, String> authTokens = new HashMap<String, String>();
		authTokens.put("sdk", "Java");

		Document doc = database.getDocument("title stuff");
		try {
			doc.update(new Document.DocumentUpdater() {

				@Override
				public boolean update(UnsavedRevision newRevision) {
					Map<String, Object> properties = newRevision
							.getProperties();
					properties.put("title", "update");
					properties.put("sdk", authTokens);
					newRevision.setUserProperties(properties);
					return true;
				}

			});
		} catch (CouchbaseLiteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		// Log the document ID (generated by the database)
		// and properties
		log.info(String.format("Document ID :: %s", document.getId()));
		System.out.println(((Map<String,String>)document.getProperty("sdk")).get("sdk"));
		
		

	}

}
